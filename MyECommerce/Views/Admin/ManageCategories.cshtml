@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Manage Categories";
}
<!-- ✅ Add this before any script using $() -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

<h2 class="mb-4">Manage Categories</h2>

<!-- ✅ Add New Category Button -->
<button class="btn btn-success mb-3" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
    + Add New Category
</button>

<!-- ✅ Categories Table -->
<table class="table table-bordered">
    <thead class="table-dark">
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="categoryTableBody">
        <!-- Categories will be dynamically inserted here -->
    </tbody>
</table>

<!-- ✅ Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryLabel">Add Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="text" id="newCategoryName" class="form-control" placeholder="Enter Category Name">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addCategory()">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- ✅ Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryLabel">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editCategoryId">
                <input type="text" id="editCategoryName" class="form-control" placeholder="Enter Category Name">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="updateCategory()">Update</button>
            </div>
        </div>
    </div>
</div>

<!-- ✅ JavaScript for AJAX Operations -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        fetchCategories(); // Load categories on page load
    });

    // ✅ Fetch Categories and Populate Table
    function fetchCategories() {
        fetch('/Category/GetCategories')
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    let tableBody = document.getElementById("categoryTableBody");
                    tableBody.innerHTML = "";
                    data.data.forEach(category => {
                        let row = `<tr>
                            <td>${category.id}</td>
                            <td>${category.name}</td>
                            <td>
                                <button class="btn btn-warning btn-sm" onclick="editCategory(${category.id}, '${category.name}')">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteCategory(${category.id})">Delete</button>
                            </td>
                        </tr>`;
                        tableBody.innerHTML += row;
                    });
                }
            });
    }

    // ✅ Add New Category
    function addCategory() {
        let name = document.getElementById("newCategoryName").value.trim();
        if (!name) {
            alert("Category name is required!");
            return;
        }

        fetch('/Category/Create', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ name: name })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                document.getElementById("newCategoryName").value = "";
                fetchCategories();
                bootstrap.Modal.getInstance(document.getElementById('addCategoryModal')).hide();
            } else {
                alert(data.message);
            }
        });
    }

    // ✅ Open Edit Category Modal
    function editCategory(id, name) {
        document.getElementById("editCategoryId").value = id;
        document.getElementById("editCategoryName").value = name;
        new bootstrap.Modal(document.getElementById('editCategoryModal')).show();
    }

    // ✅ Update Category
    function updateCategory() {
        let id = document.getElementById("editCategoryId").value;
        let name = document.getElementById("editCategoryName").value.trim();

        if (!name) {
            alert("Category name is required!");
            return;
        }

        fetch(`/Category/Edit?id=${id}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: id, name: name })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                fetchCategories();
                bootstrap.Modal.getInstance(document.getElementById('editCategoryModal')).hide();
            } else {
                alert(data.message);
            }
        });
    }

      function deleteCategory(id) {
        if (!confirm("Are you sure you want to delete this category?")) return;

        fetch(`/Category/Delete?id=${id}`, { // ✅ Correct way to pass id
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
        .then(response => response.json()) // ✅ Ensure response is JSON
        .then(data => {
            if (data.success) {
                alert(data.message);
                fetchCategories(); // ✅ Refresh categories list
            } else {
                alert("Error: " + data.message);
            }
        })
        .catch(error => console.error("Delete Error:", error));
    }


</script>
