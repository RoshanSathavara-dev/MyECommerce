@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Login";
}

<!--breadcrumb section start-->
<div class="breadcrumb-section pt-40 pb-40">
    <div class="container-1700">
        <p class="breadcrumb-text mb-0"><a href="index.html">Home</a> / <span class="text-main-color">Login</span></p>
    </div>
</div>
<!--breadcrumb section end-->
<!--login area start-->
<div class="login-area ptb-120 bg-white">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-xl-6">
                <form class="theme-form" id="otpLoginForm">
                    <h3 class="mb-40">Login Account</h3>

                    <!-- ✅ Store returnUrl in a hidden field -->
                    <input type="hidden" id="returnUrl" value="@ViewBag.ReturnUrl" />

                    <div id="loginFields" class="d-flex">
                        <input type="text" id="EmailOrContact" placeholder="User name or email address*" class="theme-input flex-grow-1" required>
                        <button type="button" id="editEmailButton" class="btn btn-warning ms-2" style="display: none;">
                            <i class="fas fa-edit"></i>
                        </button>
                    </div>

                    <!-- Send OTP Button -->
                    <button type="button" id="sendOtpButton" class="template-btn primary-btn w-100 mt-32">
                        <span>Send OTP</span>
                    </button>

                    <!-- OTP Section (Initially Hidden) -->
                    <div id="otpSection" style="display: none;">
                        <input type="text" id="OTP" placeholder="Enter OTP*" class="theme-input mt-3" required>

                        <!-- Verify OTP Button -->
                        <button type="button" id="verifyOtpButton" class="template-btn primary-btn w-100 mt-32">
                            <span>Verify OTP</span>
                        </button>

                        <!-- Resend OTP Button (Initially Disabled) -->
                        <button type="button" id="resendOtpButton" class="template-btn secondary-btn w-100 mt-3" disabled>
                            <span>Resend OTP</span>
                        </button>

                        <!-- Timer Display -->
                        <p id="otpTimer" class="text-danger mt-2"></p>
                    </div>

                    <p class="mb-0 mt-32">Not registered yet? <a href="Register" class="text-main-color">Create an Account</a></p>
                </form>
            </div>
        </div>
    </div>
</div>
<!--login area end-->

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var sendOtpButton = document.getElementById("sendOtpButton");
        var verifyOtpButton = document.getElementById("verifyOtpButton");
        var resendOtpButton = document.getElementById("resendOtpButton");
        var editEmailButton = document.getElementById("editEmailButton");
        var emailOrContactInput = document.getElementById("EmailOrContact");
        var otpInput = document.getElementById("OTP");
        var otpSection = document.getElementById("otpSection");
        var otpTimer = document.getElementById("otpTimer");

        // ✅ Send OTP Click Event
        sendOtpButton.addEventListener("click", function () {
            var emailOrContact = emailOrContactInput.value.trim();
            var returnUrl = document.getElementById("returnUrl") ? document.getElementById("returnUrl").value : "/";

            if (!emailOrContact) {
                alert("Please enter your Email or Contact No.");
                return;
            }

            fetch('/Account/SendLoginOtp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({ EmailOrContact: emailOrContact, returnUrl: returnUrl })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("OTP sent successfully!");

                    // ✅ Show OTP Section
                    otpSection.style.display = "block";

                    // ✅ Hide Send OTP Button & Show Edit Button
                    sendOtpButton.style.display = "none";
                    editEmailButton.style.display = "inline-block";

                    // ✅ Make Email Field Read-Only
                    emailOrContactInput.readOnly = true;

                    // ✅ Start Timer for Resend OTP
                    startOtpResendTimer(resendOtpButton, otpTimer, 60);
                } else {
                    alert("Failed to send OTP: " + data.message);
                }
            });
        });

        // ✅ Verify OTP Click Event
        verifyOtpButton.addEventListener("click", function () {
            var otp = otpInput.value.trim();
            var emailOrContact = emailOrContactInput.value.trim();
            var returnUrl = document.getElementById("returnUrl") ? document.getElementById("returnUrl").value : "/";

            if (!otp) {
                alert("Please enter the OTP.");
                return;
            }

            fetch('/Account/VerifyLoginOtp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({ otp: otp, EmailOrContact: emailOrContact, returnUrl: returnUrl })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = data.redirectUrl; // ✅ Redirect to correct page
                } else {
                    alert("Invalid OTP: " + data.message);
                }
            });
        });

        // ✅ Edit Email Button Click Event
        editEmailButton.addEventListener("click", function () {
            // Enable the email field
            emailOrContactInput.readOnly = false;
            emailOrContactInput.value = "";

            // Hide OTP Section & Reset Fields
            otpSection.style.display = "none";
            otpInput.value = "";
            otpTimer.innerHTML = "";

            // Show Send OTP Button Again
            sendOtpButton.style.display = "block";

            // Hide Edit Button
            editEmailButton.style.display = "none";
        });

        // ✅ Resend OTP Click Event
        resendOtpButton.addEventListener("click", function () {
            var emailOrContact = emailOrContactInput.value.trim();
            var returnUrl = document.getElementById("returnUrl") ? document.getElementById("returnUrl").value : "/";

            if (!emailOrContact) {
                alert("Please enter your Email or Contact No.");
                return;
            }

            fetch('/Account/SendLoginOtp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({ EmailOrContact: emailOrContact, returnUrl: returnUrl })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("New OTP sent successfully!");

                    // ✅ Disable Resend OTP Button and Start Timer Again
                    startOtpResendTimer(resendOtpButton, otpTimer, 60);
                } else {
                    alert("Failed to resend OTP: " + data.message);
                }
            });
        });

        // ✅ Function to start the resend timer
        function startOtpResendTimer(button, timerElement, seconds) {
            let remainingTime = seconds;

            button.disabled = true; // ✅ Disable the button while timer is running

            function updateTimer() {
                if (remainingTime > 0) {
                    timerElement.innerHTML = `Resend OTP in ${remainingTime}s`;
                    remainingTime--;
                    setTimeout(updateTimer, 1000);
                } else {
                    button.disabled = false;
                    timerElement.innerHTML = "";
                }
            }

            updateTimer();
        }
    });
</script>
